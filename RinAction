##examples in R in Action


##计算给定正态分布95%面积下的z分数值
qnorm(0.95, mean = 0, sd = 1)   ##1.644


##计算z分数为0.95时候，正态分布下的面积
pnorm(0.95, mean = 0, sd = 1)   ##0.8289


##计算在给定的正态分布内，取到特定值的概率
dnorm(0.95, mean = 0,sd = 1)    ##0.254


##给出一个既定范围，既定数量的正态分布
rnorm(100, mean = 0, sd = 1)  ##一个数量为100，均值为0，sd为1的分布


pnorm(9.75,mean = 10, sd = 0.125) 
pnorm(10.25, mean = 10, sd = 0.125)

pnorm(9.75,mean = 10, sd = 0.125) + (1 - pnorm(10.25, mean = 10, sd = 0.125))

pnorm(10.25, mean = 9.7, sd = 0.0875) - pnorm(9.75,mean = 9.7, sd = 0.0875)


##从9.9到9.1，随着离原始均值10偏差越来越大，检验功效越来越高，说明检测出有问题的概率越来越高，9.5之后，就基本是100%了
pnorm(9.75,mean = 9.1, sd = 0.0875) + (1 - pnorm(10.25, mean = 9.1, sd = 0.0875))
pnorm(9.75,mean = 9.2, sd = 0.0875) + (1 - pnorm(10.25, mean = 9.2, sd = 0.0875))
pnorm(9.75,mean = 9.3, sd = 0.0875) + (1 - pnorm(10.25, mean = 9.3, sd = 0.0875))
pnorm(9.75,mean = 9.4, sd = 0.0875) + (1 - pnorm(10.25, mean = 9.4, sd = 0.0875))
pnorm(9.75,mean = 9.5, sd = 0.0875) + (1 - pnorm(10.25, mean = 9.5, sd = 0.0875))
pnorm(9.75,mean = 9.6, sd = 0.0875) + (1 - pnorm(10.25, mean = 9.6, sd = 0.0875))
pnorm(9.75,mean = 9.7, sd = 0.0875) + (1 - pnorm(10.25, mean = 9.7, sd = 0.0875))
pnorm(9.75,mean = 9.8, sd = 0.0875) + (1 - pnorm(10.25, mean = 9.8, sd = 0.0875))
pnorm(9.75,mean = 9.9, sd = 0.0875) + (1 - pnorm(10.25, mean = 9.9, sd = 0.0875))


##随着sd越来越大，检验功效越来越高，说明检测出有问题的概率越来越高，但是功效增长幅度没有均值变化来的显著
1- pnorm(10.25, mean = 10, sd = 0.0875) + pnorm(9.75,mean = 10, sd = 0.0875)
1-pnorm(10.25, mean = 10, sd = 0.0975) + pnorm(9.75,mean = 10, sd = 0.0975)
1-pnorm(10.25, mean = 10, sd = 0.1075) + pnorm(9.75,mean = 10, sd = 0.1075)
1-pnorm(10.25, mean = 10, sd = 0.1175) + pnorm(9.75,mean = 10, sd = 0.1175)
1-pnorm(10.25, mean = 10, sd = 0.1275) + pnorm(9.75,mean = 10, sd = 0.1275)
1-pnorm(10.25, mean = 10, sd = 0.1375) + pnorm(9.75,mean = 10, sd = 0.1375)
1-pnorm(10.25, mean = 10, sd = 0.1475) + pnorm(9.75,mean = 10, sd = 0.1475)
1-pnorm(10.25, mean = 10, sd = 0.1575) + pnorm(9.75,mean = 10, sd = 0.1575)
1-pnorm(10.25, mean = 10, sd = 0.1675) + pnorm(9.75,mean = 10, sd = 0.1675)
1-pnorm(10.25, mean = 10, sd = 0.1775) + pnorm(9.75,mean = 10, sd = 0.1775)
1-pnorm(10.25, mean = 10, sd = 0.1875) + pnorm(9.75,mean = 10, sd = 0.1875)
1-pnorm(10.25, mean = 10, sd = 0.1975) + pnorm(9.75,mean = 10, sd = 0.1975)







library(MASS)
options(digits=3)
set.seed(1234)
mean <- c(230.7, 146.7, 3.6)
sigma <- matrix(c(15360.8, 6721.2, -47.1,6721.2, 4700.9, -16.5,-47.1, -16.5, 0.3), nrow=3, ncol=3)
mydata <- mvrnorm(500, mean, sigma)
mydata <- as.data.frame(mydata)
names(mydata) <- c("y","x1","x2")
dim(mydata)
##[1] 500 3
head(mydata, n=10)
##       y    x1   x2
##1   98.8  41.3 3.43
##2  244.5 205.2 3.80
##3  375.7 186.7 2.51
##4  -59.2  11.2 4.71
##5  313.0 111.0 3.45
##6  288.8 185.1 2.72
##7  134.8 165.0 4.39
##8  171.7  97.4 3.64
##9  167.2 101.0 3.50
##10 121.1  94.5 4.10









options(digits=2)

Student <- c("John Davis", "Angela Williams", "Bullwinkle Moose","David Jones", "Janice Markhammer", "Cheryl Cushing","Reuven Ytzrhak", "Greg Knox", "Joel England","Mary Rayburn")

Math <- c(502, 600, 412, 358, 495, 512, 410, 625, 573, 522)

Science <- c(95, 99, 80, 82, 75, 85, 80, 95, 89, 86)

English <- c(25, 22, 18, 15, 20, 28, 15, 30, 27, 18)

roster <- data.frame(Student, Math, Science, English,stringsAsFactors=FALSE)

z <- scale(roster[,2:4])

score <- apply(z, 1, mean)

roster <- cbind(roster, score)

y <- quantile(score, c(.8,.6,.4,.2))

roster$grade[score >= y[1]] <- "A"
roster$grade[score < y[1] & score >= y[2]] <- "B"
roster$grade[score < y[2] & score >= y[3]] <- "C"
roster$grade[score < y[3] & score >= y[4]] <- "D"
roster$grade[score < y[4]] <- "F"


name <- strsplit((roster$Student), " ")
lastname <- sapply(name, "[", 2)
firstname <- sapply(name, "[", 1)
roster <- cbind(firstname,lastname, roster[,-1])

roster <- roster[order(lastname,firstname),]

roster
##    firstname  lastname  Math Science English score grade
##6      Cheryl    Cushing  512      85      28  0.35     C
##1        John      Davis  502      95      25  0.56     B
##9        Joel    England  573      89      27  0.70     B
##4       David      Jones  358      82      15 -1.16     F
##8        Greg       Knox  625      95      30  1.34     A
##5      Janice Markhammer  495      75      20 -0.63     D
##3  Bullwinkle      Moose  412      80      18 -0.86     D
##10       Mary    Rayburn  522      86      18 -0.18     C
##2      Angela   Williams  600      99      22  0.92     A
##7      Reuven    Ytzrhak  410      80      15 -1.05     F




##########################
## aggregate
##########################
options(digits=3)
attach(mtcars)
aggdata <-aggregate(mtcars, by=list(cyl,gear), FUN=mean, na.rm=TRUE)
aggdata
##  Group.1 Group.2  mpg cyl disp  hp drat   wt qsec  vs   am gear carb
##1       4       3 21.5   4  120  97 3.70 2.46 20.0 1.0 0.00    3 1.00
##2       6       3 19.8   6  242 108 2.92 3.34 19.8 1.0 0.00    3 1.00
##3       8       3 15.1   8  358 194 3.12 4.10 17.1 0.0 0.00    3 3.08
##4       4       4 26.9   4  103  76 4.11 2.38 19.6 1.0 0.75    4 1.50
##5       6       4 19.8   6  164 116 3.91 3.09 17.7 0.5 0.50    4 4.00
##6       4       5 28.2   4  108 102 4.10 1.83 16.8 0.5 1.00    5 2.00
##7       6       5 19.7   6  145 175 3.62 2.77 15.5 0.0 1.00    5 6.00
##8       8       5 15.4   8  326 300 3.88 3.37 14.6 0.0 1.00    5 6.00



##########################
## reshape
##########################

library(reshape)

md <- melt(mtcars, id=(c("cyl", "gear")))

head(md)
##  cyl gear variable value
##1   6    4      mpg  21.0
##2   6    4      mpg  21.0
##3   4    4      mpg  22.8
##4   6    3      mpg  21.4
##5   8    3      mpg  18.7
##6   6    3      mpg  18.1

## notice that here the result is the same as the aggregate function
> cast(md, cyl+gear ~ variable, fun.aggregate = mean)
##  cyl gear  mpg disp  hp drat   wt qsec  vs   am carb
##1   4    3 21.5  120  97 3.70 2.46 20.0 1.0 0.00 1.00
##2   4    4 26.9  103  76 4.11 2.38 19.6 1.0 0.75 1.50
##3   4    5 28.2  108 102 4.10 1.83 16.8 0.5 1.00 2.00
##4   6    3 19.8  242 108 2.92 3.34 19.8 1.0 0.00 1.00
##5   6    4 19.8  164 116 3.91 3.09 17.7 0.5 0.50 4.00
##6   6    5 19.7  145 175 3.62 2.77 15.5 0.0 1.00 6.00
##7   8    3 15.1  358 194 3.12 4.10 17.1 0.0 0.00 3.08
##8   8    5 15.4  326 300 3.88 3.37 14.6 0.0 1.00 6.00























