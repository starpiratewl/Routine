## practice with the basic plot
dose <- c(20,30,40,45,60)
drugA <- c(16,20,27,40,60)
drugB <- c(15,18,25,31,40)



plot(dose, drugA, type = "b", col = "red", lty = 2, lwd = 2, pch = 2, cex = 2, main = "Clinical trial for DrugA", xlab = "Dosage", ylab = "Drug Response", sub = "This is hypothetical data", xlim = c(0,60), ylim = c(0,70))

plot(dose, drugA, type = "b", col = "red", lty = 2, lwd = 2, pch = 2, cex = 2, main = "Clinical trial for DrugA", xlab = "Dosage", ylab = "Drug Response", sub = "This is hypothetic data", xlim = c(0,60), ylim = c(0,70), bg = "blue")

## triangles with blue color and green background
plot(dose, drugB, type = "b", col = "blue", bg = "green", pch = 24, lty = 6)

## triangles with blue color but no background color
plot(dose, drugB, type = "b", col = "blue", bg = "green", pch = 2, lty = 6)

## That is why the pch have some the same shape but they are asigned different serial numbers

##################################################################
## abline and legend
##################################################################
opar <- par(no.readonly = T)
par(lwd = 2, cex = 1.5, font.lab = 2)
plot(dose,drugA, type = "b",pch = 15, lty = 1,col = "red", ylim = c(0,60), main = "DrugA VS DrugB", xlab = "Drug Dosage", ylab = "Drug Response", sub = "This is hypothetical data", xlim = c(10,60))

lines(dose, drugB, type = "b", lty = 2, pch = 17, col = "blue")

abline(h = c(30), lwd = 1.5, lty = 2, col = "gray")

library(Hmisc)
minor.tick(nx = 3, ny = 3,  tick.ratio = 0.5)

legend("topleft", inset = .05, title = "Drug Type", c("A","B"), lty = c(1,2), pch= c(15,17), col = c("red", "blue"))

par(opar)


##################################################################
## deal with the axis
##################################################################

x <- c(1:10)
y <- x
z <- 10/x

opar <- par(no.readonly = T)
par(mar = c(5,4,4,9) + 0.1)
plot(x,y, type = "b", pch = 21, lty = 3, col = "red", yaxt = "n", ann = F)

lines(x,z, type = "b", pch = 22, col = "blue", lty = 2)

axis(2, at = x, labels = x, col.axis = "red", las = 2)

axis(4, at = z, labels = round(z, digits = 2), col.axis = "blue", las = 2, cex.axis = 0.7, tck = -0.01)

mtext("y=10/x", side = 4, line = 3, cex.lab = 1, las = 2, col = "blue")

title("An Example of Creative Axes", xlab = "X values", ylab = "Y = X")

par(opar)

##################################################################
## text annotations
##################################################################
attach(mtcars)
plot(wt, mpg, main = "Mileage vs Car Weight", xlab = "Weight", ylab = "Mileage", pch = 18, col = "blue")
text(wt, mpg, row.names(mtcars), cex = 0.6, pos = 4, col = "red")
detach(mtcars)




opar <- par(no.readonly = T)
par(cex = 1.5)
plot(1:7, 1:7, type = "n")
text(3,3, "Example of default text")
text(4,4, family = "mono", "Example of mono-spaced text")
text(5,5, family = "serif", "Example of serif-spaced text")
text(6,6, family = "arial", "Example of Arial text")
par(opar)



##################################################################
## combine graph together
##################################################################
## 2*2
attach(mtcars)
oapr <- par(no.readonly = T)
par(mfrow = c(2,2))
plot(wt,mpg, main = "Scatter plot of wt vs mpg")
plot(wt, disp, main = "Scatter plot of wt vs disp")
hist(wt, main = "Histgram of wt")
boxplot(wt, main = "Boxplot of wt")
par(opar)
detach(mtcars)

##1*3
attach(mtcars)
opar <- par(no.readonly = T)
par(mfrow = c(3,1))
hist(wt)
hist(mpg)
hist(disp)
par(opar)
detach(mtcars)


## not symmetrical plot arrangment
attach(mtcars)
layout(matrix(c(1,1,2,3),2,2,byrow = T))
hist(wt)
hist(mpg)
hist(disp)
detach(mtcars)


attach(mtcars)
layout(matrix(c(1,1,2,3),2,2,byrow = T), widths = c(2,1), heights = c(1,3))
hist(wt)
hist(mpg)
hist(disp)
detach(mtcars)




##################################################################
## combine different type of graph in one picture
##################################################################
oapr <- par(no.readonly = T)
par(fig = c(0,0.8,0,0.8))
plot(mtcars$wt, mtcars$mpg, xlab = "Miles per Gallon", ylab = "Car Weight")

par(fig = c(0,0.8,0.55,1), new = T)
boxplot(mtcars$wt, horizontal = T, axes = F)

par(fig = c(0.65, 1, 0, 0.8), new = T)
boxplot(mtcars$mpg, axes = F)

mtext("Enhanced Scatter plot", side = 3, outer = T, line = -4)

par(opar)




##################################################################
## plot the function
##################################################################

funhaha <- function(x)(sin(x))

plot(funhaha)



##################################################################
## plot the arrows in R coordinate system
##################################################################
plot(c(0,1),c(0,1))
arrows(0,0,1,1)






##################################################################
## data managment
##################################################################
manager <- c(1, 2, 3, 4, 5)
date <- c("10/24/08", "10/28/08", "10/1/08", "10/12/08", "5/1/09")
country <- c("US", "US", "UK", "UK", "UK")
gender <- c("M", "F", "F", "M", "F")
age <- c(32, 45, 25, 39, 99)
q1 <- c(5, 3, 3, 3, 2)
q2 <- c(4, 5, 5, 3, 2)
q3 <- c(5, 2, 5, 4, 1)
q4 <- c(5, 5, 5, NA, 2)
q5 <- c(5, 5, 2, NA, 1)
leadership <- data.frame(manager, date, country, gender, age,q1, q2, q3, q4, q5, stringsAsFactors=FALSE)

##############################
## creating new variables

mydata <- data.frame(x1 = c(2,2,4,6), x2 = c(3,4,2,8))
mydata$sumx <- mydata$x1 + mydata$x2
mydata$meanx <- (mydata$x1 + mydata$x2)/2

mydata <- transform(mydata, sumx = x1 + x2, meanx = (x1 + x2)/2)

##############################
## recoding variables
leadership$age[leadership$age > 90] <- NA

leadership$agecat[leadership$age > 75] <- "Elder"
leadership$agecat[leadership$age >= 55 & leadership$age <= 75] <- "Middle Aged"
leadership$agecat[leadership$age < 55] <- "Young"


leadership <- within(leadership, {
  agecat <- NA
  agecat[age > 75] <- "Elder"
  agecat[age >= 55 & age <= 75] <- "Middle Aged"
  agecat[age < 55] <- "Young"
})


## use cut to set new variables and catergorize a continuous vector
transform(mtcars, disp_cat = cut(mtcars$disp, breaks= c(0,200,300,500), labels = c("short","moderate","long")))
transform(leadership, agecat = cut(leadership$age, breaks = c(0,55,75,100), labels = c("Young","Middle Aged", "Elder")))

##############################
## rename the variables

fix(leadership)

library(reshape)
leadership <- rename(leadership, c(manager = "managerID", date = "testDate"))

names(leadership)
names(leadership)[2] <- "testdate"
names(leadership)[6:10] <- c("item1","item2","item3","item4","item5")


##############################
## deal with missing value

## find na value
is.na(leadership[,6:10])

## exclude missing values from analyses
##1, use function has a na.rm = T parameters
x <- c(1,2,NA,4)
y <- sum(x, na.rm = T)

##2, use na.omit() function to delete the NA values in rows(observations)
newdata <- na.omit(leadership)


##############################
## date values
strDates <- c("2007-22-06","2014-01-01")
as.Date(strDates, "%m/%d/%Y")
##[1] NA NA
as.Date(strDates, "%Y/%d/%m")
##[1] NA NA
as.Date(strDates,"%Y-%d-%m")
##[1] "2007-06-22" "2014-01-01"

###############
##  %d  01-31
##  %a  Mon
##  %A  Monday
##  %m  00-12
##  %b  Jan
##  %B  January
##  %Y  2007
##  %y  07
###############


myformat <- "%m/%d/%y"
leadership$date <- as.Date(leadership$date, myformat)
##  manager testdate country gender age item1 item2 item3 item4 item5       date
##1       1 10/24/08      US      M  32     5     4     5     5     5 2008-10-24
##2       2 10/28/08      US      F  45     3     5     2     5     5 2008-10-28
##3       3  10/1/08      UK      F  25     3     5     5     5     2 2008-10-01
##4       4 10/12/08      UK      M  39     3     3     4    NA    NA 2008-10-12
##5       5   5/1/09      UK      F  99     2     2     1     2     1 2009-05-01


date()
##[1] "Tue Jan 10 09:14:46 2017"
Sys.Date()
##[1] "2017-01-10"

myformat <- "%Y//%m//%d//%A//%B"
format(date(),myformat)
##Error in format.default(date(), myformat) : invalid 'trim' argument
format(Sys.Date(), myformat)
##[1] "2017//01//10//Tuesday//January"


## date can do subtractions
startdate <- as.Date("2004-02-13")
enddate <- as.Date("2011-01-22")
enddate - startdate
##Time difference of 2535 days
difftime(startdate,enddate)
##Time difference of -2535 days
difftime(startdate,enddate,units = "weeks")
##Time difference of -362.1429 weeks
difftime(startdate,enddate,units = "years")
##Error in match.arg(units) : 
##  'arg' should be one of “auto”, “secs”, “mins”, “hours”, “days”, “weeks”


##############################
## sorting data

leadership
##  manager testdate country gender age item1 item2 item3 item4 item5       date
##1       1 10/24/08      US      M  32     5     4     5     5     5 2008-10-24
##2       2 10/28/08      US      F  45     3     5     2     5     5 2008-10-28
##3       3  10/1/08      UK      F  25     3     5     5     5     2 2008-10-01
##4       4 10/12/08      UK      M  39     3     3     4    NA    NA 2008-10-12
##5       5   5/1/09      UK      F  99     2     2     1     2     1 2009-05-01

leadership[order(leadership$age),]
##  manager testdate country gender age item1 item2 item3 item4 item5       date
##3       3  10/1/08      UK      F  25     3     5     5     5     2 2008-10-01
##1       1 10/24/08      US      M  32     5     4     5     5     5 2008-10-24
##4       4 10/12/08      UK      M  39     3     3     4    NA    NA 2008-10-12
##2       2 10/28/08      US      F  45     3     5     2     5     5 2008-10-28
##5       5   5/1/09      UK      F  99     2     2     1     2     1 2009-05-01



##############################
## merge data

id1 <- c(2, 3, 4, 5, 7)
heights <- c(62, 65, 71, 71, 67)
df1 <- data.frame(id1 = id1, heights)

id2 <- c(1, 2, 6:10)
weights <- c(147, 113, 168, 135, 142, 159, 160)
df2 <- data.frame(id2 = id2, weights)

df1$sex <- c("f", "m", "f", "f", "m")
df2$sex <- c("f", "f", "m", "m", "f", "f", "f")


merge(df1,df2, by.x = "id1", by.y ="id2", all = F)
##  id1 heights sex.x weights sex.y
##1   2      62     f     113     f
##2   7      67     m     135     m

merge(df1,df2, by.x = "id1", by.y = "id2", all = T)
##   id1 heights sex.x weights sex.y
##1    1      NA  <NA>     147     f
##2    2      62     f     113     f
##3    3      65     m      NA  <NA>
##4    4      71     f      NA  <NA>
##5    5      71     f      NA  <NA>
##6    6      NA  <NA>     168     m
##7    7      67     m     135     m
##8    8      NA  <NA>     142     f
##9    9      NA  <NA>     159     f
##10  10      NA  <NA>     160     f

merge(df1,df2, by.x = "id1", by.y = "id2", all.x = T)
##  id1 heights sex.x weights sex.y
##1   2      62     f     113     f
##2   3      65     m      NA  <NA>
##3   4      71     f      NA  <NA>
##4   5      71     f      NA  <NA>
##5   7      67     m     135     m
merge(df1,df2, by.x = "id1", by.y = "id2", all.y = T)
##  id1 heights sex.x weights sex.y
##1   1      NA  <NA>     147     f
##2   2      62     f     113     f
##3   6      NA  <NA>     168     m
##4   7      67     m     135     m
##5   8      NA  <NA>     142     f
##6   9      NA  <NA>     159     f
##7  10      NA  <NA>     160     f




##############################
## subseting data

## selecting and keeping variables
newdata <- leadership[,c(6:10)]

myvars <- c("q1","q2","q3","q4","q5")
newdata1 <- leadership[myvars]

## excluding and droping variables
myvars <- names(leadership) %in% c("q3","q4")
newdata2 <- leadership[!myvars]

newdata3 <- leadership[c(-8,-9)]

newdata4 <- leadership
newdata4$q3 <- newdata4$q4 <- NULL


## selecting observations

newdata5 <- leadership[1:3,]
newdata6 <- leadership[which(leadership$gender == "M" & leadership$age > 30),]
newdata7 <- leadership[leadership$gender == "M" & leadership$age > 30, ]

leadership$testdate <- as.Date(leadership$date, "%m/%d/%y")
startdate <- as.Date("2009-01-01")
enddate <- as.Date("2009-10-31")
newdata8 <- leadership[which(leadership$testdate >= startdate & leadership$testdate <= enddate),]


## subset function
newdata9 <- subset(leadership, age > 35 | age < 24, select = c(q1,q2,q3,q4))

newdata10 <- subset(leadership, gender == "M" & age > 25, select = gender:q4)


## random samples

mysample <- leadership[sample(1:nrow(leadership), 3, replace = F),]

## use SQL
library(sqldf)
newdf <- sqldf("select * from mtcars where carb = 1 order by mpg", row.names = T)

sqldf("select avg(mpg) as avg_mpg, avg(disp) as avg_disp, gear from mtcars where cyl in (4,6) group by gear")




##################################################################
## advanced data managment
##################################################################

## turn a vector of values to a vector of z scores
scale(vector)

## probability functions






































